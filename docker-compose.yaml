services:
  db:
    image: postgres:15
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    networks:
      - app-network

  sidekiq:
    depends_on:
      - 'db'
      - 'redis'
    build:
      context: .
      dockerfile: Dockerfile.dev
    command: bundle exec sidekiq
    volumes:
      - app-storage:/rails/storage
      - '/project/tmp' # don't mount tmp directory
    environment:
      - RAILS_ENV=${RAILS_ENV}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - RAILS_MASTER_KEY=${RAILS_MASTER_KEY}
      - RAILS_MAX_THREADS=${RAILS_MAX_THREADS}
      - REDIS_URL=${REDIS_URL}
    networks:
      - app-network

  redis:
    image: redis:7
    ports:
      - "6380:6379"
    networks:
      - app-network
  
  api:
    build:
      context: .
      dockerfile: Dockerfile.dev
    command: './bin/rails server -b 0.0.0.0'
    volumes:
      - app-storage:/rails/storage
    ports:
      - "3010:3000"
    depends_on:
      - db
      - redis
      - sidekiq
    networks:
      - app-network
    environment:
      - RAILS_ENV=${RAILS_ENV}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - RAILS_MASTER_KEY=${RAILS_MASTER_KEY}
      - RAILS_MAX_THREADS=${RAILS_MAX_THREADS}
      - REDIS_URL=${REDIS_URL}
volumes:
  postgres_data:
  app-storage:

networks:
  app-network:
